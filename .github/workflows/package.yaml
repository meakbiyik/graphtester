name: Lint and Test

on: pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # check-out repo and setup python
      - name: Check out repository
        uses: actions/checkout@v2

      # setup Python 3.8
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      # install & configure poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # load cached venv if cache exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      # install the root project, if required
      - name: Install library
        run: poetry install --no-interaction

      # run linter
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # run test suite
      - name: Run tests
        run: |
          poetry run pytest app/
